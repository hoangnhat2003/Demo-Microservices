version: "3.9"

services:
  mysql:
    container_name: mysql
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: hoangnhat
    ports:
      - "3366:3306"
    expose:
      - 3366
    volumes:
      - mysql:/var/lib/mysql
      - ./deployment/db/ecommerce_system.sql:/data/application/ecommerce_system.sql
    command: --init-file /data/application/ecommerce_system.sql
    networks:
      - microservices-app

  service-registry:
    container_name: service-registry
    build:
      context: ./service-registry
      dockerfile: Dockerfile
    networks:
      - microservices-app
    ports:
      - "8761:8761"

  hystrix-dashboard:
    container_name: hystrix-dashboard
    build:
      context: ./hystrix-dashboard
      dockerfile: Dockerfile
    environment:
      eureka.client.service-url.defaultZone : http://service-registry:8761/eureka/
    depends_on:
      - service-registry
    networks:
      - microservices-app
    ports:
      - "9295:9295"

  cloud-config-server:
    container_name: cloud-config-server
    build:
      context: ./cloud-config-server
      dockerfile: Dockerfile
    environment:
      eureka.client.service-url.defaultZone : http://service-registry:8761/eureka/
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
    depends_on:
      - service-registry
    networks:
      - microservices-app
    ports:
      - "9296:9296"

  auth-server:
    container_name: auth-server
    build:
      context: ./auth-server
      dockerfile: Dockerfile
    environment:
      eureka.client.service-url.defaultZone: http://service-registry:8761/eureka/
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
      DB_URL: ${DB_URL}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - service-registry
      - mysql
    networks:
      - microservices-app
    ports:
      - "6650:5005"

  customer-service:
    container_name: customer-service
    build:
      context: ./customer-service
      dockerfile: Dockerfile
    environment:
      eureka.client.service-url.defaultZone: http://service-registry:8761/eureka/
      DB_URL: ${DB_URL}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    ports:
      - "6651:5005"
    networks:
      - microservices-app
    depends_on:
      - service-registry
      - mysql
      - kafka

  notification-service:
    container_name: notification-service
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    environment:
      eureka.client.service-url.defaultZone: http://service-registry:8761/eureka/
      DB_URL: ${DB_URL}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    ports:
      - "6652:5005"
    networks:
      - microservices-app
    depends_on:
      - service-registry
      - mysql
      - kafka

  order-service:
    container_name: order-service
    build:
      context: ./order-service
      dockerfile: Dockerfile
    environment:
      eureka.client.service-url.defaultZone: http://service-registry:8761/eureka/
      DB_URL: ${DB_URL}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    ports:
      - "6653:5005"
    networks:
      - microservices-app
    depends_on:
      - service-registry
      - mysql
      - kafka

  product-service:
    container_name: product-service
    build:
      context: ./product-service
      dockerfile: Dockerfile
    environment:
      eureka.client.service-url.defaultZone: http://service-registry:8761/eureka/
      DB_URL: ${DB_URL}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    ports:
      - "6654:5005"
    networks:
      - microservices-app
    depends_on:
      - service-registry
      - mysql
      - kafka

  warehouse-service:
    container_name: warehouse-service
    build:
      context: ./warehouse-service
      dockerfile: Dockerfile
    environment:
      eureka.client.service-url.defaultZone: http://service-registry:8761/eureka/
      DB_URL: ${DB_URL}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    ports:
      - "6655:5005"
    networks:
      - microservices-app
    depends_on:
      - service-registry
      - mysql
      - kafka

  zookeeper:
    image: wurstmeister/zookeeper:latest
    restart: always
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - microservices-app
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    restart: always
    networks:
      - microservices-app
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://:29092,EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafka-ui
    restart: always
    networks:
      - microservices-app
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
    ports:
      - 9000:9000
    depends_on:
      - kafka

volumes:
  mysql:
    driver: local

networks:
  microservices-app:
    driver: bridge